// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test submitDialog renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "height": 210,
              "width": "100%",
            }
          }
        >
          <Image
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "height": 210,
                  "width": "100%",
                },
                undefined,
              ]
            }
          />
          <ExponentLinearGradient
            colors={
              Array [
                0,
                4278190080,
              ]
            }
            endPoint={undefined}
            locations={
              Array [
                0.989,
                0.9,
              ]
            }
            startPoint={undefined}
            style={
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "height": 70,
            "marginTop": 10,
            "width": "100%",
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "https://fosterautogroup.com/dist/img/nophoto.jpg",
            }
          }
          style={
            Object {
              "borderRadius": 25,
              "height": 50,
              "margin": 10,
              "width": 50,
            }
          }
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "paddingBottom": 10,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 2,
              "flexDirection": "row",
              "paddingBottom": 10,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 10,
            },
            Object {
              "backgroundColor": "white",
              "paddingBottom": 0,
              "paddingRight": "30%",
              "paddingTop": 0,
            },
          ]
        }
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "black",
                "fontSize": 30,
                "fontWeight": "normal",
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
           
           
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 2,
              "flexDirection": "row",
              "paddingBottom": 10,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 10,
            },
            Object {
              "backgroundColor": "white",
              "paddingBottom": 0,
              "paddingRight": "30%",
              "paddingTop": 0,
            },
          ]
        }
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "black",
                "fontSize": 30,
                "fontWeight": "normal",
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
           R$ 
          NaN
           
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 2,
              "flexDirection": "row",
              "paddingBottom": 10,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 10,
            },
            Object {
              "backgroundColor": "white",
              "paddingBottom": 10,
              "paddingTop": 0,
            },
          ]
        }
        virtual={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "alignSelf": "stretch",
              "flex": 1,
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "color": "#c2c2d6",
                  "fontSize": 15,
                  "fontWeight": "normal",
                },
              ]
            }
            uppercase={false}
            virtual={undefined}
          >
             
             
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 2,
              "flexDirection": "row",
              "paddingBottom": 10,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 10,
            },
            Object {
              "backgroundColor": "transparent",
              "paddingBottom": 10,
              "paddingLeft": "70%",
              "paddingTop": 5,
            },
          ]
        }
        virtual={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#0EAC6F",
              "flex": 0,
              "opacity": 1,
              "paddingHorizontal": 15,
              "paddingVertical": 10,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignItems": "center",
                "color": "white",
                "fontSize": 16,
                "fontWeight": "300",
              }
            }
          >
             
            Pedir
             
          </Text>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onRequestClose={[Function]}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
            testID={undefined}
          />
          <View
            collapsable={undefined}
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            pointerEvents="box-none"
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "marginBottom": 0,
                "marginLeft": 0,
                "marginRight": 0,
                "marginTop": 0,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
          >
            <View
              enabled={true}
              keyboardVerticalOffset={0}
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  Object {
                    "paddingBottom": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 13,
                    "flexDirection": "column",
                    "overflow": "hidden",
                    "width": 270,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "rgb(255,255,255)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "margin": 18,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "flexDirection": "column",
                      "width": "90%",
                    }
                  }
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={true}
                    maxLength={120}
                    multiline={true}
                    numberOfLines={5}
                    onChangeText={[Function]}
                    placeholder="Digite sua mensagem"
                  />
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 30,
                        "justifyContent": "flex-end",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      textAlignVertical="top"
                    >
                      0/120
                       
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 50,
                          "width": "35%",
                        }
                      }
                    >
                      <View
                        accessibilityComponentType="button"
                        accessibilityLabel={undefined}
                        accessibilityTraits={
                          Array [
                            "button",
                          ]
                        }
                        accessible={true}
                        collapsable={undefined}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          style={
                            Array [
                              Object {},
                            ]
                          }
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            disabled={undefined}
                            ellipsizeMode="tail"
                            style={
                              Array [
                                Object {
                                  "color": "#007AFF",
                                  "fontSize": 18,
                                  "padding": 8,
                                  "textAlign": "center",
                                },
                                Object {
                                  "color": "#830037",
                                },
                              ]
                            }
                          >
                            Cancelar
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 50,
                          "width": "30%",
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "height": 50,
                          "width": "35%",
                        }
                      }
                    >
                      <View
                        accessibilityComponentType="button"
                        accessibilityLabel={undefined}
                        accessibilityTraits={
                          Array [
                            "button",
                          ]
                        }
                        accessible={true}
                        collapsable={undefined}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          style={
                            Array [
                              Object {},
                            ]
                          }
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            disabled={undefined}
                            ellipsizeMode="tail"
                            style={
                              Array [
                                Object {
                                  "color": "#007AFF",
                                  "fontSize": 18,
                                  "padding": 8,
                                  "textAlign": "center",
                                },
                                Object {
                                  "color": "#0EAC6F",
                                },
                              ]
                            }
                          >
                            Confirmar
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </Modal>
      </View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 16,
            },
            Object {
              "alignSelf": "center",
              "color": "black",
              "fontSize": 15,
              "left": "70%",
              "paddingTop": 230,
              "position": "absolute",
            },
          ]
        }
        uppercase={false}
        virtual={undefined}
      >
         Quantidade 
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
            "left": "70%",
            "paddingHorizontal": 50,
            "paddingVertical": 50,
            "position": "absolute",
            "top": 215,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "1",
                "textColor": undefined,
                "value": 1,
              },
              Object {
                "label": "2",
                "textColor": undefined,
                "value": 2,
              },
              Object {
                "label": "3",
                "textColor": undefined,
                "value": 3,
              },
              Object {
                "label": "4",
                "textColor": undefined,
                "value": 4,
              },
              Object {
                "label": "5",
                "textColor": undefined,
                "value": 5,
              },
              Object {
                "label": "6",
                "textColor": undefined,
                "value": 6,
              },
              Object {
                "label": "7",
                "textColor": undefined,
                "value": 7,
              },
              Object {
                "label": "8",
                "textColor": undefined,
                "value": 8,
              },
              Object {
                "label": "9",
                "textColor": undefined,
                "value": 9,
              },
              Object {
                "label": "10",
                "textColor": undefined,
                "value": 10,
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
